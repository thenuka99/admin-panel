import type { ReactElement, ReactNode } from 'react';
import type { ScaleContinuousNumeric } from 'd3-scale';
import type { Point, CommonProps } from './types';
import React from 'react';
export declare type MouseEvent = {
    clientX: number;
    clientY: number;
    scaleX: ScaleContinuousNumeric<any, any>;
    scaleY: ScaleContinuousNumeric<any, any>;
    x: number;
    y: number;
    closestPoints: Point[];
    originalEvent: React.MouseEvent;
};
export declare type HandlersProps = CommonProps & {
    className?: string;
    sensitivity?: number;
    optimized?: boolean;
    distance?: 'x' | 'y';
    onClick?: (event: MouseEvent) => void;
    onMouseMove?: (event: MouseEvent) => void;
    onMouseLeave?: React.MouseEventHandler;
    children: ReactNode;
};
/**
 * Helps to use mouse events. For now supports only `onClick`, `onMouseMove` and `onMouseLeave`.
 *
 * This component will be improved and simplified in the future.
 */
export declare function Handlers(props: HandlersProps): ReactElement;
